---
import Layout from "../layouts/Layout.astro";
import MarcoMobile from "../components/MarcoMobile.astro";
import Boton from "../components/dynamic/Boton.astro";
import ListContacSection from "../components/section/ListContacSection.astro";
//import { contactos } from "../data/contactos";
import SearchBar from "../components/ui/SearchBar.astro";
---

<Layout>
  <MarcoMobile>
    <section
      class="w-full h-full relative bg-white border-2 border-gray-300 rounded-3xl bg-cover items-center-safe"
    >
      <div class="flex justify-center items-center gap-4 p-4">
        <Boton
          color="bg-green-500 absolute bottom-15 right-4"
          icon="fas fa-plus"
          link="/contactoAdd"
        />
        <Boton
          color="bg-red-500 absolute top-4 left-5  "
          icon="fas fa-arrow-left"
          link="http://localhost:4321"
        />
      </div>

      <div class="min-h-screen p-5 justify-around">
        <SearchBar />
        <h1 class="text-2xl font-bold mb-4">Teléfono</h1>

        <ListContacSection data="{contactos}" />
      </div>
    </section>
  </MarcoMobile>
  <script is:inline>
    const listaContenedor = document.getElementById("contactList");

    function crearContactoCard(contacto, index) {
      const fotoFinal =
        contacto.imagen && contacto.imagen.trim() !== ""
          ? contacto.imagen
          : "https://cdn-icons-png.flaticon.com/512/6522/6522581.png";

      const nombreFinal = contacto.nombre || "Sin Nombre";
      //pagina para ver info
      const link1 = "/contactoViwe";
      const icono1 = "fas fa-eye";

      //pagina para editar
      const link2 = "/contactoAdd";

      const li = document.createElement("li");
      li.className =
        "flex flex-col w-full contacto hijo min-h-15 group shadow bg-white rounded-2xl ";
      li.innerHTML = `
      <div class=" flex items-center gap-4  w-full">
      <img src=${fotoFinal} alt=${nombreFinal} class="rounded-full h-15 p-1" />
      <p class="w-full text-xl">${nombreFinal}</p>
      </div>
        <div class="hidden text-black desplegable p-4  flex justify-around items-center h-15 w-full">
 <a
 data-index=${index}
  href=${link1}
  class=" w-12 h-12  flex items-center justify-center rounded-full  transition shadow"
>
  <i class="${icono1}"></i>
</a>
 <a
 data-index=${index}
  href=${link2}
  class=" w-12 h-12 flex items-center justify-center rounded-full  transition shadow"
>
  <i class="fas fa-pen"></i>
</a>
 <button
  class=" w-12 h-12 eliminar flex items-center justify-center rounded-full transition shadow"
>
  <i class="fas fa-trash"></i>

</button>

        </div>
      `;

      listaContenedor.appendChild(li);
    }

    document
      .getElementById("contactList")
      ?.addEventListener("click", (event) => {
        const boton = event.target.closest("button.eliminar");

        if (boton) {

          const li = boton.closest("li");
          const index = boton
            .closest(".desplegable")
            ?.querySelector("[data-index]")?.dataset.index;

          const contactos = JSON.parse(localStorage.getItem("contactos")) || [];

          if (!isNaN(index) && index >= 0 && index < contactos.length) {
            contactos.splice(index, 1);
            localStorage.setItem("contactos", JSON.stringify(contactos));
            console.log(`Contacto eliminado en el índice ${index}`);

            li?.remove();
          }
        }
      });

    document
      .getElementById("contactList")
      ?.addEventListener("click", (event) => {
        const clickedHijo = event.target.closest(".hijo");
        if (
          clickedHijo &&
          document.getElementById("contactList")?.contains(clickedHijo)
        ) {
          const desplegable = clickedHijo.querySelector(".desplegable");
          if (desplegable) {
            desplegable.classList.toggle("hidden");
          }
        }
      });

    document
      .getElementById("contactList")
      ?.addEventListener("click", (event) => {
        const anchor = event.target.closest("a[data-index]");
        if (anchor && anchor.closest(".hijo")) {
          const index = anchor.dataset.index;

          const contactos = JSON.parse(localStorage.getItem("contactos")) || [];

          if (index >= 0 && index < contactos.length) {
            const contacto = contactos[index];
            const contactoConIndice = { ...contacto, index: Number(index) };

            localStorage.setItem("actual", JSON.stringify(contactoConIndice));
            console.log("Contacto actual con índice:", contactoConIndice);
          } 
        }
      });

    const contactosGuardados =
      JSON.parse(localStorage.getItem("contactos")) || [];
    console.log("CARGADOS:", contactosGuardados);
    contactosGuardados.forEach((contacto, index) => {
      crearContactoCard(contacto, index);
    });
  </script>
</Layout>
